<?xml version="1.0" encoding="UTF-8"?>
<project name="webdriver">
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <!-- load shell environment -->
    <property environment="ENV" />

    <!-- load property file -->
    <!-- Make changes in the my.properties file to overwrite default properties-->
    <property file="./tools/config/my.properties"/>
    <property file="config.properties"/>
    
    <target name="build.jenkins" description="This is a private target."
          depends="junit-run,
                   checkstyle-results,
                   pmd-results,
                   findbugs-results" />
          
    <path id="build.class.path">
        <fileset dir="lib">
          <include name="**/*.jar" />
        </fileset>
    </path>
        
    <path id="test.class.path">
        <pathelement location="${dir.selenium.test.classes}" />
    </path>
        
    <target name="junit-clean">
        <delete dir="bin" />
        <delete dir="bin/classes" />
        <delete dir="bin/webdriver_junit_results" />
    </target>

    <target name="junit-prepare">
        <mkdir dir="bin" />
        <mkdir dir="bin/classes" />
        <mkdir dir="bin/webdriver_junit_results" />
        
        <replaceregexp byline="true"
                       match="testUrl=(.*)"
                       replace="testUrl=${test.website.site}"
                       file="config.properties" />
        <echo message="Updated property testUrl:${test.website.site}" />               
        <replaceregexp byline="true"
                       match="browsers=(.*)"
                       replace="browsers=${browsers}"
                       file="config.properties" />
        <echo message="Updated property browsers:${browsers}" />               
        <replaceregexp byline="true"
                       match="ieVersion=(.*)"
                       replace="ieVersion=${ieVersion}"
                       file="config.properties" />               
        <echo message="Updated property ieVersion:${ieVersion}" />
    </target>

    <target name="junit-compile" depends=" junit-clean, junit-prepare">
        <javac srcdir="src" destdir="bin/classes" includeAntRuntime="true">
            <classpath refid="build.class.path" />
        </javac>
    </target>
    
    <target name="junit-run" depends="junit-compile"/>
    
    <target name="junit-tests" depends="junit-compile">
        <junit fork="true" printsummary="yes" dir="${dir.intermediate}/webdriver">
            <classpath refid="test.class.path" />
            <classpath refid="build.class.path" />
            <formatter type="xml" />
            <formatter type="plain" usefile="false"/>
            <test name="com.tl.pageTest1" todir="${dir.testresults}/webdriver_junit_results" />
        </junit>
    </target>
	
	<target name="pmd-results">
	    <mkdir dir="${pmd.dir}"/>
	 	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
		<pmd shortFilenames="true">
		    <ruleset>UICRuleset.xml</ruleset>
			<formatter type="html" toFile="${pmd.dir}/pmd-results.html" />
			<formatter type="xml" toFile="${pmd.dir}/pmd-results.xml" />
		  	<fileset dir="src">
           		<include name="**/*.java"/>
       		</fileset>
		 </pmd>
	</target>
	
	<target name="findbugs-results">
	    <path id="libs">
            <fileset dir="lib">
                <include name="**/*.jar" />
            </fileset>
        </path>
        <property name="libraries" value="${toString:libs}" />
        
	    <mkdir dir="${findbugs.dir}"/>
	 	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	 	<findbugs 
	 	    home="${findbugs.home}"
	 	    output="xml:withMessages" 
	 	    outputFile="${findbugs.dir}/findbugs-result.xml" 
	 	    jvmargs="-Xms512M -Xmx512M ">
	 	    <auxClasspath path="${libraries}" />
		  	<sourcePath path="src" />
	      	<class location="bin/classes" />
	    </findbugs>
	</target>
	
	<target name="checkstyle-results">
        <mkdir dir="${checkstyle.dir}"/>
        <taskdef resource="checkstyletask.properties" classpath="${checkstyle.home}/checkstyle-5.6-all.jar"/>
        <checkstyle config="TLCheckstyle.xml">
		  <fileset dir="src" includes="**/*.java"/>
		  <formatter type="plain"/>
		  <formatter type="xml" toFile="${checkstyle.dir}/checkstyle-result.xml"/>
		</checkstyle>
    </target>
</project>
